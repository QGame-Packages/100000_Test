name: ET Package

on:
  workflow_dispatch:  # 保留手动触发能力[6](@ref)
  push:
    branches:
      - master        # 监听 master 分支合并事件[1,6](@ref)
    tags:
      - 'v*'          # 监听所有版本标签推送[6,8](@ref)
  release:
    types: [created]  # 保留手动创建 Release 触发

jobs:
  versioning:         # 新增版本管理作业
    name: Auto Versioning
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.set_version.outputs.NEW_VERSION }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取完整提交历史以识别标签[1](@ref)

      - name: Get latest tag
        id: get_tag
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "CURRENT_VERSION=${LATEST_TAG#v}" >> $GITHUB_OUTPUT
        shell: bash

      - name: Increment patch version
        id: set_version
        run: |
          IFS='.' read -ra VER <<< "${{ steps.get_tag.outputs.CURRENT_VERSION }}"
          NEW_VERSION="${VER[0]}.${VER[1]}.$((VER[2] + 1))"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_OUTPUT
          npm version $NEW_VERSION --no-git-tag-version
          echo "Updated to $NEW_VERSION"

      - name: Commit version change
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add package.json
          git commit -m "chore: Auto bump version to ${{ steps.set_version.outputs.NEW_VERSION }} [skip ci]"
          git push origin HEAD:master

      - name: Create and push tag
        run: |
          git tag -a v${{ steps.set_version.outputs.NEW_VERSION }} -m "Release v${{ steps.set_version.outputs.NEW_VERSION }}"
          git push origin v${{ steps.set_version.outputs.NEW_VERSION }}

  build:
    needs: versioning  # 依赖版本管理作业
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: v${{ needs.versioning.outputs.new_version }}  # 检出新版本标签

      - uses: actions/setup-node@v4
        with:
          node-version: 16
          cache: 'npm'       # 新增缓存优化[5](@ref)
          cache-dependency-path: package-lock.json

      - run: npm ci         # 使用 clean install 替代 install

  publish-gpr:
    needs: [versioning, build]
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write       # 提升权限以支持自动提交[1,3](@ref)
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 16
          registry-url: https://npm.pkg.github.com/

      - name: Publish Package
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1  # 自动生成 Release[1](@ref)
        with:
          tag_name: v${{ needs.versioning.outputs.new_version }}
          generate_release_notes: true
